/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EX1;

import com.context.DBContext;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell
 */
public class ProductAndCustomer extends javax.swing.JFrame {

    /**
     * Creates new form ProductAndCustomer
     */
    DBContext a = new DBContext();

    Statement stm;
    ResultSet rs;
    DefaultTableModel tablemodel;
    DefaultTableModel tablemodel1;
    public ProductAndCustomer() {
        initComponents();
        stm = a.connectDB();
        tablemodel = (DefaultTableModel) jTable1.getModel();
        tablemodel1 = (DefaultTableModel) jTable2.getModel();
        loadTable_Product();
        loadTable_Customer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel_product = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel_productcode = new javax.swing.JLabel();
        jTextField_productcode = new javax.swing.JTextField();
        jLabel_productname = new javax.swing.JLabel();
        jTextField_productname = new javax.swing.JTextField();
        jLabel_unit = new javax.swing.JLabel();
        jLabel_price = new javax.swing.JLabel();
        jTextField_price = new javax.swing.JTextField();
        jButton_add = new javax.swing.JButton();
        jButton_update = new javax.swing.JButton();
        jButton_delete = new javax.swing.JButton();
        jButton_reset = new javax.swing.JButton();
        jComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel_custom = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel_customercode = new javax.swing.JLabel();
        jTextField_customercode = new javax.swing.JTextField();
        jLabel_customername = new javax.swing.JLabel();
        jTextField_customername = new javax.swing.JTextField();
        jLabel_customerdob = new javax.swing.JLabel();
        jTextField_customerdob = new javax.swing.JTextField();
        jLabel_customergender = new javax.swing.JLabel();
        jCheckBox_male = new javax.swing.JCheckBox();
        jCheckBox_female = new javax.swing.JCheckBox();
        jButton_add1 = new javax.swing.JButton();
        jButton_update1 = new javax.swing.JButton();
        jButton_delete1 = new javax.swing.JButton();
        jButton_reset1 = new javax.swing.JButton();
        jButton_exit = new javax.swing.JButton();
        jLabel_customeraddress = new javax.swing.JLabel();
        jTextField_customeraddress = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Information of Product", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14))); // NOI18N

        jLabel_productcode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_productcode.setText("Product Code:");

        jTextField_productcode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel_productname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_productname.setText("Product Name:");

        jTextField_productname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel_unit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_unit.setText("Unit:");

        jLabel_price.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_price.setText("Price:");

        jTextField_price.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton_add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_add.setText("Add");
        jButton_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addActionPerformed(evt);
            }
        });

        jButton_update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_update.setText("Update");
        jButton_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_updateActionPerformed(evt);
            }
        });

        jButton_delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_delete.setText("Delete");
        jButton_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_deleteActionPerformed(evt);
            }
        });

        jButton_reset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_reset.setText("Reset");
        jButton_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_resetActionPerformed(evt);
            }
        });

        jComboBox.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dollar", "Ringgit", "Man", "VND" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton_add)
                                .addGap(64, 64, 64)
                                .addComponent(jButton_update))
                            .addComponent(jLabel_unit))
                        .addGap(16, 16, 16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_productcode)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_productcode, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_productname)
                            .addComponent(jLabel_price, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_price, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_productname, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_delete)
                        .addGap(63, 63, 63)
                        .addComponent(jButton_reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_productcode)
                    .addComponent(jTextField_productcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_productname)
                    .addComponent(jTextField_productname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_unit)
                    .addComponent(jLabel_price)
                    .addComponent(jTextField_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_add)
                    .addComponent(jButton_update)
                    .addComponent(jButton_delete)
                    .addComponent(jButton_reset))
                .addGap(39, 39, 39))
        );

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product_Name", "Product_code", "Unit", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel_productLayout = new javax.swing.GroupLayout(jPanel_product);
        jPanel_product.setLayout(jPanel_productLayout);
        jPanel_productLayout.setHorizontalGroup(
            jPanel_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_productLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel_productLayout.setVerticalGroup(
            jPanel_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_productLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Product", jPanel_product);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Information Of Customer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14))); // NOI18N

        jLabel_customercode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_customercode.setText("Customer Code:");

        jTextField_customercode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel_customername.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_customername.setText("Customer Name:");

        jTextField_customername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel_customerdob.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_customerdob.setText("Date of Birth:");

        jTextField_customerdob.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel_customergender.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_customergender.setText("Gender:");

        jCheckBox_male.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox_male.setText("Male");
        jCheckBox_male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_maleActionPerformed(evt);
            }
        });

        jCheckBox_female.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox_female.setText("Female");

        jButton_add1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_add1.setText("Add");
        jButton_add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_add1ActionPerformed(evt);
            }
        });

        jButton_update1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_update1.setText("Update");
        jButton_update1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_update1ActionPerformed(evt);
            }
        });

        jButton_delete1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_delete1.setText("Delete");
        jButton_delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_delete1ActionPerformed(evt);
            }
        });

        jButton_reset1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_reset1.setText("Reset");
        jButton_reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_reset1ActionPerformed(evt);
            }
        });

        jButton_exit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_exit.setText("Exit");
        jButton_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_exitActionPerformed(evt);
            }
        });

        jLabel_customeraddress.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_customeraddress.setText("Address:");

        jTextField_customeraddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jButton_add1)
                .addGap(54, 54, 54)
                .addComponent(jButton_update1)
                .addGap(43, 43, 43)
                .addComponent(jButton_delete1)
                .addGap(41, 41, 41)
                .addComponent(jButton_reset1)
                .addGap(41, 41, 41)
                .addComponent(jButton_exit)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel_customeraddress, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField_customeraddress))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_customercode)
                            .addComponent(jLabel_customerdob, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_customercode, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_customerdob, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel_customername)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField_customername, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(39, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel_customergender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox_male)
                        .addGap(26, 26, 26)
                        .addComponent(jCheckBox_female)
                        .addGap(30, 30, 30))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_customername)
                            .addComponent(jTextField_customername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_customercode)
                            .addComponent(jTextField_customercode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel_customerdob)
                        .addComponent(jTextField_customerdob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel_customergender)
                        .addComponent(jCheckBox_male)
                        .addComponent(jCheckBox_female)))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_customeraddress)
                    .addComponent(jTextField_customeraddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_add1)
                    .addComponent(jButton_update1)
                    .addComponent(jButton_delete1)
                    .addComponent(jButton_reset1)
                    .addComponent(jButton_exit))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustomerCode", "CustomerName", "Gender", "Address", "DateOfBirth"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel_customLayout = new javax.swing.GroupLayout(jPanel_custom);
        jPanel_custom.setLayout(jPanel_customLayout);
        jPanel_customLayout.setHorizontalGroup(
            jPanel_customLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_customLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel_customLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel_customLayout.setVerticalGroup(
            jPanel_customLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_customLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Customer", jPanel_custom);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
      public void loadTable_Product() {

        try {
            rs = stm.executeQuery("SELECT * FROM tblMatHang");
            tablemodel.setRowCount(0);
            while (rs.next()) {
                String id = rs.getString("MaHang");
                String name = rs.getString("TenHang");
                String unit = rs.getString("DVT");
                double price = Double.parseDouble(rs.getString("Gia"));
                tablemodel.insertRow(tablemodel.getRowCount(), new Object[]{id, name, unit, price});
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
      
     public void loadTable_Customer() {

        try {
            rs = stm.executeQuery("SELECT * FROM tblKhachHang");
            tablemodel1.setRowCount(0);
            while (rs.next()) {
                String id = rs.getString("MaKH");
                String name = rs.getString("TenKH");
                int gender = Integer.parseInt(rs.getString("GT"));
                String address = rs.getString("Diachi");
                String dob = rs.getString("NgaySinh");
                tablemodel1.insertRow(tablemodel1.getRowCount(), new Object[]{id, name, gender, address,dob});
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    public boolean checkEmptyProduct() {

        if (!jTextField_productcode.getText().isEmpty() && !jTextField_productname.getText().isEmpty()  && !jTextField_price.getText().isEmpty()) {
            return false;
        }
        return true;
    }
    public boolean checkEmptyCustomer(){
    
    if(!jTextField_customercode.getText().isEmpty() && !jTextField_customername.getText().isEmpty() && !jTextField_customerdob.getText().isEmpty() &&!jCheckBox_male.isSelected() && !jCheckBox_female.isSelected() &&!jLabel_customeraddress.getText().isEmpty()|| !jTextField_customercode.getText().isEmpty() && !jTextField_customername.getText().isEmpty() && !jTextField_customerdob.getText().isEmpty() &&!jCheckBox_male.isSelected() && jCheckBox_female.isSelected() &&!jLabel_customeraddress.getText().isEmpty()|| !jTextField_customercode.getText().isEmpty() && !jTextField_customername.getText().isEmpty() && !jTextField_customerdob.getText().isEmpty() &&jCheckBox_male.isSelected() && !jCheckBox_female.isSelected() &&!jLabel_customeraddress.getText().isEmpty())
                        return false;
        return true;
    }
    public boolean checkDuplicate_Product(String id_check) {

        try {
            rs = stm.executeQuery("SELECT * FROM tblMatHang");
            while (rs.next()) {
                String id = rs.getString("MaHang");

                if (id_check.equalsIgnoreCase(id)) {
                    return true;
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return false;
    }
     public boolean checkDuplicate_Customer(String code_check) {

        try {
            rs = stm.executeQuery("SELECT * FROM tblKhachHang");
            while (rs.next()) {
                String code = rs.getString("MaKH");

                if (code_check.equalsIgnoreCase(code)) {
                    return true;
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return false;
    }
    public int ValidProduct() {
        //valid code
        boolean valid_code = jTextField_productcode.getText().trim().matches("[A-Z]{3}[0-9]{3}");
        if (!valid_code) {
            return 0;
        }
        //valid name
        boolean valid_name = jTextField_productname.getText().trim().matches("[a-zA-Z ]+");
        if (!valid_name) {
            return 1;
        }
       
        //valid price
        boolean valid_price = jTextField_price.getText().trim().matches("[0-9]+(\\.[0-9]+)?");
        if (!valid_price) {
            return 2;
        }

        return 3;
    }
      public int ValidCustomer() {
        //valid code
        boolean valid_code = jTextField_customercode.getText().trim().matches("[A-Z]{3}[0-9]{3}");
        if (!valid_code) {
            return 0;
        }
        //valid name
        boolean valid_name = jTextField_customername.getText().trim().matches("[a-zA-Z ]+");
        if (!valid_name) {
            return 1;
        }
        //valid dob
        boolean valid_dob = jTextField_customerdob.getText().trim().matches("^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$");
        if (!valid_dob) {
            return 2;
        }
        // valid gender
        boolean male_empty = jCheckBox_male.isSelected();
        boolean female_empty = jCheckBox_female.isSelected();
        if (female_empty && male_empty) {
            return 3;
        }
        // valid address
        boolean valid_address = jTextField_customeraddress.getText().trim().matches("(\\d+)?[a-zA-Z ]+(\\d+)?");
        if(!valid_address)
            return 4;
        
        return 5;
    }
    private void jButton_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addActionPerformed
        try {
            if (checkEmptyProduct()) {
                JOptionPane.showMessageDialog(rootPane, "Textfield can't be blank");
            } else {
                if (ValidProduct() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Code must contains 3 alphabet character and 3 number");

                } else if (ValidProduct() == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Name only contains one or more alphabet character and space");
                }  else if (ValidProduct() == 2) {
                    JOptionPane.showMessageDialog(rootPane, "format of price contains one or more number and may be with comma");
                } else {
                    String code = jTextField_productcode.getText().trim();
                    String name = jTextField_productname.getText().trim();
                    String unit = (String) jComboBox.getSelectedItem();
                    double price = Double.parseDouble(jTextField_price.getText().trim());

                    if (checkDuplicate_Product(code)) {
                        JOptionPane.showMessageDialog(rootPane, "fail to add because code existed");
                    } else {
                        String sql = "INSERT INTO tblMatHang VALUES('" + code + "','" + name + "','" + unit + "','" + price + "')";
                        stm.execute(sql);
                        loadTable_Product();
                        JOptionPane.showMessageDialog(rootPane, "add successfully");
                    }
                }

            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton_addActionPerformed

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_updateActionPerformed
        try {
            if (checkEmptyProduct()) {
                JOptionPane.showMessageDialog(rootPane, "Textfield can't be blank");
            } else {
                if (ValidProduct() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Code must contains 3 alphabet character and 3 number");

                } else if (ValidProduct() == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Name only contains one or more alphabet character and space");
                }  else if (ValidProduct() == 2) {
                    JOptionPane.showMessageDialog(rootPane, "format of price contains one or more number and may be with comma");
                } else {
                    String code = jTextField_productcode.getText().trim();
                    String name = jTextField_productname.getText().trim();
                    String unit = (String) jComboBox.getSelectedItem();
                    double price = Double.parseDouble(jTextField_price.getText().trim());

                    if (checkDuplicate_Product(code)) {
                        String sql = "UPDATE tblMatHang SET TenHang ='" + name + "', DVT ='" + unit + "', Gia = '" + price + "'" + " WHERE MaHang ='" + code + "'";
                        stm.execute(sql);
                        loadTable_Product();
                        JOptionPane.showMessageDialog(rootPane, "update successfully");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "cancel update because product doesn't exist");

                    }
                }

            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton_updateActionPerformed

    private void jButton_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_deleteActionPerformed
        try {
             {

                String code = jTextField_productcode.getText().trim();
                if (checkDuplicate_Product(code)) {
                    String sql = "DELETE FROM tblMatHang WHERE MaHang ='" + code + "'";
                    stm.execute(sql);
                    loadTable_Product();
                    JOptionPane.showMessageDialog(rootPane, "delete successfully");
                } else {

                    JOptionPane.showMessageDialog(rootPane, "cancel delete because product doesn't exist");
                }
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton_deleteActionPerformed

    private void jButton_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_resetActionPerformed
       jTextField_productcode.setText("");
       jTextField_productname.setText("");
       jTextField_price.setText("");
       jComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_jButton_resetActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int index = jTable1.getSelectedRow();
        tablemodel = (DefaultTableModel) jTable1.getModel();
        String code = tablemodel.getValueAt(index, 0).toString();
        String name = tablemodel.getValueAt(index, 1).toString();
        String unit = tablemodel.getValueAt(index, 2).toString();
        String price = tablemodel.getValueAt(index, 3).toString();
        jTextField_productcode.setText(code);
        jTextField_productname.setText(name);
        jComboBox.setSelectedItem(unit);
        jTextField_price.setText(price);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jCheckBox_maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_maleActionPerformed

    private void jButton_add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_add1ActionPerformed
         try {
            if (checkEmptyCustomer()) {
                JOptionPane.showMessageDialog(rootPane, "Textfield can't be blank");
            } else {
                if (ValidCustomer()== 0) {
                    JOptionPane.showMessageDialog(rootPane, "Code must contains 3 alphabet character and 3 number");

                } else if (ValidCustomer()== 1) {
                    JOptionPane.showMessageDialog(rootPane, "Name only contains one or more alphabet character and space");
                } else if (ValidCustomer()== 2) {
                     JOptionPane.showMessageDialog(rootPane, "format of price contains one or more number and may be with comma");
                } else if (ValidCustomer()== 3) {
                      JOptionPane.showMessageDialog(rootPane, "Person can't be both male and female");
                } 
                else if (ValidCustomer()== 4) {
                      JOptionPane.showMessageDialog(rootPane, "Addres only contains number and alphabet character");
                }
                else {
                    String code = jTextField_customercode.getText().trim();
                    String name = jTextField_customername.getText().trim();
                    String dob = jTextField_customerdob.getText().trim();
                    String address = jTextField_customeraddress.getText().trim();
                    boolean male = jCheckBox_male.isSelected();
                    boolean female = jCheckBox_female.isSelected();

                    if (checkDuplicate_Customer(code)) {
                        JOptionPane.showMessageDialog(rootPane, "fail to add because code existed");
                    } else {
                        int bit;
                        if(male)
                            bit = 1;
                        else
                            bit = 0;
                        String sql = "INSERT INTO tblKhachHang VALUES('" + code + "','" + name + "','" + bit + "','" + address +"','"+dob+"')";
                        stm.execute(sql);
                        loadTable_Customer();
                        JOptionPane.showMessageDialog(rootPane, "add successfully");
                    }
                }

            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton_add1ActionPerformed

    private void jButton_update1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_update1ActionPerformed
        try {
            if (checkEmptyCustomer()) {
                JOptionPane.showMessageDialog(rootPane, "Textfield can't be blank");
            } else {
                if (ValidCustomer()== 0) {
                    JOptionPane.showMessageDialog(rootPane, "Code must contains 3 alphabet character and 3 number");

                } else if (ValidCustomer()== 1) {
                    JOptionPane.showMessageDialog(rootPane, "Name only contains one or more alphabet character and space");
                } else if (ValidCustomer()== 2) {
                     JOptionPane.showMessageDialog(rootPane, "format of price contains one or more number and may be with comma");
                } else if (ValidCustomer()== 3) {
                      JOptionPane.showMessageDialog(rootPane, "Person can't be both male and female");
                } 
                else if (ValidCustomer()== 4) {
                      JOptionPane.showMessageDialog(rootPane, "Addres only contains number and alphabet character");
                }
                else {
                    String code = jTextField_customercode.getText().trim();
                    String name = jTextField_customername.getText().trim();
                    String dob = jTextField_customerdob.getText().trim();
                    String address = jTextField_customeraddress.getText().trim();
                    boolean male = jCheckBox_male.isSelected();
                    boolean female = jCheckBox_female.isSelected();
                  
                    if (checkDuplicate_Customer(code)) {
                         int bit;
                        if(male)
                            bit = 1;
                        else
                            bit = 0;
                        String sql = "UPDATE tblKhachHang SET TenKH ='" + name + "', GT ='" +bit  + "', Diachi = '" + address + "'" + ", NgaySinh ='"+dob+ "' WHERE MaKH ='" + code + "'";
                        stm.execute(sql);
                        loadTable_Customer();
                        JOptionPane.showMessageDialog(rootPane, "update successfully");
                        
                    } else {
                       JOptionPane.showMessageDialog(rootPane, "fail to update because code doesn't exist");
                    }
                }

            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton_update1ActionPerformed

    private void jButton_delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_delete1ActionPerformed
          try {
             {

                String code = jTextField_customercode.getText().trim();
                if (checkDuplicate_Customer(code)) {
                    String sql = "DELETE FROM tblKhachHang WHERE MaKH ='" + code + "'";
                    stm.execute(sql);
                    loadTable_Customer();
                    JOptionPane.showMessageDialog(rootPane, "delete successfully");
                } else {

                    JOptionPane.showMessageDialog(rootPane, "cancel delete because customer doesn't exist");
                }
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton_delete1ActionPerformed

    private void jButton_reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_reset1ActionPerformed
        jTextField_customercode.setText("");
        jTextField_customername.setText("");
        jTextField_customeraddress.setText("");
        jTextField_customerdob.setText("");
        jCheckBox_male.setSelected(false);
        jCheckBox_female.setSelected(false);
    }//GEN-LAST:event_jButton_reset1ActionPerformed

    private void jButton_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_exitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton_exitActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int index = jTable2.getSelectedRow();
        tablemodel1 = (DefaultTableModel) jTable2.getModel();
        String code = tablemodel1.getValueAt(index, 0).toString();
        String name = tablemodel1.getValueAt(index, 1).toString();
        String bit = tablemodel1.getValueAt(index, 2).toString();
        String address = tablemodel1.getValueAt(index, 3).toString();
        String dob = tablemodel1.getValueAt(index, 4).toString();
        jTextField_customercode.setText(code);
        jTextField_customername.setText(name);
        if(bit.equals("1"))
             jCheckBox_male.setSelected(true);
        else
           jCheckBox_female.setSelected(true);
        jTextField_customeraddress.setText(address);
        jTextField_customerdob.setText(dob);
        
       
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        jCheckBox_male.setSelected(false);
         jCheckBox_female.setSelected(false);
    }//GEN-LAST:event_jTable2MouseReleased
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductAndCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductAndCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductAndCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductAndCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductAndCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_add;
    private javax.swing.JButton jButton_add1;
    private javax.swing.JButton jButton_delete;
    private javax.swing.JButton jButton_delete1;
    private javax.swing.JButton jButton_exit;
    private javax.swing.JButton jButton_reset;
    private javax.swing.JButton jButton_reset1;
    private javax.swing.JButton jButton_update;
    private javax.swing.JButton jButton_update1;
    private javax.swing.JCheckBox jCheckBox_female;
    private javax.swing.JCheckBox jCheckBox_male;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JLabel jLabel_customeraddress;
    private javax.swing.JLabel jLabel_customercode;
    private javax.swing.JLabel jLabel_customerdob;
    private javax.swing.JLabel jLabel_customergender;
    private javax.swing.JLabel jLabel_customername;
    private javax.swing.JLabel jLabel_price;
    private javax.swing.JLabel jLabel_productcode;
    private javax.swing.JLabel jLabel_productname;
    private javax.swing.JLabel jLabel_unit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel_custom;
    private javax.swing.JPanel jPanel_product;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField_customeraddress;
    private javax.swing.JTextField jTextField_customercode;
    private javax.swing.JTextField jTextField_customerdob;
    private javax.swing.JTextField jTextField_customername;
    private javax.swing.JTextField jTextField_price;
    private javax.swing.JTextField jTextField_productcode;
    private javax.swing.JTextField jTextField_productname;
    // End of variables declaration//GEN-END:variables
}
