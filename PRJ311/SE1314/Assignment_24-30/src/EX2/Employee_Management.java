/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EX2;

import DB_forEx2.DBContext;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell
 */
public class Employee_Management extends javax.swing.JFrame {

    /**
     * Creates new form Employee_Management
     */
    DBContext a = new DBContext();
    Statement stm;// thực thi câu lệnh sql
    ResultSet rs;//Lưu trữ và xử lý dữ liệu
    DefaultTableModel tablemodel;

    public Employee_Management() {
        initComponents();
        stm = a.connectDB();
        tablemodel = (DefaultTableModel) jTable.getModel();
        loadTable();
        jTextArea_result.setEnabled(false);

    }

    public void loadTable() {

        try {
            rs = stm.executeQuery("SELECT * FROM worker");
            tablemodel.setRowCount(0);
            while (rs.next()) {
                String code = rs.getString("code");
                String name = rs.getString("name");
                double salary = Double.parseDouble(rs.getString("salary"));
                int bonus = Integer.parseInt(rs.getString("bonus"));
                tablemodel.insertRow(tablemodel.getRowCount(), new Object[]{code, name, salary, bonus});
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel_code = new javax.swing.JLabel();
        jTextField_code = new javax.swing.JTextField();
        jLabel_name = new javax.swing.JLabel();
        jTextField_bonus = new javax.swing.JTextField();
        jLabel_salary = new javax.swing.JLabel();
        jTextField_salary = new javax.swing.JTextField();
        jLabel_bonus = new javax.swing.JLabel();
        jTextField_name = new javax.swing.JTextField();
        jButton_add = new javax.swing.JButton();
        jButton_sort = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField_forsearch = new javax.swing.JTextField();
        jButton_search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_result = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24)); // NOI18N
        jLabel1.setText("Employee Management");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Enter new employee: ");

        jLabel_code.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_code.setText("Code:");

        jLabel_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_name.setText("Name:");

        jLabel_salary.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_salary.setText("Salary:");

        jLabel_bonus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_bonus.setText("Bonus:");

        jButton_add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_add.setText("Add");
        jButton_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addActionPerformed(evt);
            }
        });

        jButton_sort.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_sort.setText("Sort");
        jButton_sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sortActionPerformed(evt);
            }
        });

        jTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Salary", "Bonus"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Enter code to search:");

        jTextField_forsearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton_search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_search.setText("Search");
        jButton_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchActionPerformed(evt);
            }
        });

        jTextArea_result.setColumns(20);
        jTextArea_result.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jTextArea_result.setRows(5);
        jScrollPane2.setViewportView(jTextArea_result);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel_code)
                                        .addComponent(jLabel_salary))
                                    .addGap(34, 34, 34)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField_code, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(122, 122, 122)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel_bonus)
                                            .addGap(18, 18, 18)
                                            .addComponent(jTextField_bonus, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel_name)
                                            .addGap(18, 18, 18)
                                            .addComponent(jTextField_name, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jButton_add)
                                    .addGap(64, 64, 64)
                                    .addComponent(jButton_sort)
                                    .addGap(225, 225, 225))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton_search)
                                        .addGap(8, 8, 8)))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_forsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2))))))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_name)
                        .addComponent(jTextField_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel_code)))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_salary)
                    .addComponent(jTextField_salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_bonus)
                    .addComponent(jTextField_bonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_add)
                    .addComponent(jButton_sort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField_forsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton_search)
                        .addGap(89, 89, 89))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public boolean checkEmpty() {
        if (!jTextField_code.getText().isEmpty() && !jTextField_name.getText().isEmpty() && !jTextField_salary.getText().isEmpty() && !jTextField_bonus.getText().isEmpty()) {
            return false;
        }
        return true;
    }

    public int ValidEmployee() {

        //valid code
        boolean valid_code = jTextField_code.getText().trim().matches("[A-Z][0-9]{2}");
        if (!valid_code) {
            return 0;
        }
        //valid name
        boolean valid_name = jTextField_name.getText().trim().matches("[a-zA-Z ]+");
        if (!valid_name) {
            return 1;
        }
        //valid salary
        boolean valid_salary = jTextField_salary.getText().trim().matches("[+]?[0-9]+(\\.[0-9]+)?");
        if (!valid_salary) {
            return 2;
        }
        //valid bonus
        boolean valid_bonus = jTextField_bonus.getText().trim().matches("[+]?[0-9]+");
        if (!valid_bonus) {
            return 3;
        }

        return 4;
    }

    public boolean checkDuplicate(String code_check) {

        try {
            rs = stm.executeQuery("SELECT * FROM worker");
            while (rs.next()) {
                String code = rs.getString("code");

                if (code_check.equalsIgnoreCase(code)) {
                    return true;
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return false;
    }
    private void jButton_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addActionPerformed
        try {
            if (checkEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Textfield can't be blank");
            } else {
                if (ValidEmployee() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Code must contains 1 alphabet character and 2 number");

                } else if (ValidEmployee() == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Name only contains one or more alphabet character and space");
                } else if (ValidEmployee() == 2) {
                    JOptionPane.showMessageDialog(rootPane, "format of salary is double datatype");
                } else if (ValidEmployee() == 3) {
                    JOptionPane.showMessageDialog(rootPane, "format of bonus is integer datatype");
                } else {
                    String code = jTextField_code.getText().trim();
                    String name = jTextField_name.getText().trim();
                    int salary = Integer.parseInt(jTextField_salary.getText().trim());
                    int bonus = Integer.parseInt(jTextField_bonus.getText().trim());
                    if (checkDuplicate(code)) {
                        JOptionPane.showMessageDialog(rootPane, "fail to add because code existed");
                    } else {

                        String sql = "INSERT INTO worker VALUES('" + code + "','" + name + "','" + salary + "','" + bonus + "')";
                        stm.execute(sql);
                        loadTable();
                        JOptionPane.showMessageDialog(rootPane, "add successfully");
                    }
                }

            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton_addActionPerformed
    // save employee to arraylist
    public ArrayList<Employee> ListEmployee(String query) {

        ArrayList<Employee> list = new ArrayList<>();
        try {
            rs = stm.executeQuery(query);
            Employee employee;
            while (rs.next()) {
                employee = new Employee(rs.getString("code"), rs.getString("name"), Double.parseDouble(rs.getString("salary")), Integer.parseInt(rs.getString("bonus")));
                list.add(employee);
            }
        } catch (Exception e) {
        }
        return list;
    }

    /*  public void showSortedJatable(String orderquery) {
        ArrayList<Employee> list = ListEmployee(orderquery);
        tablemodel.getDataVector().removeAllElements();
        tablemodel.setColumnIdentifiers(new Object[]{"code", "name", "salary", "bonus"});
        Object[] row = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getCode();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getSalary();
            row[3] = list.get(i).getBonus();
            tablemodel.addRow(row);
        }
        jTable.setModel(tablemodel);
        
    }*/

    private void jButton_sortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sortActionPerformed
        // showSortedJatable("Select * from Employee order by salary desc");

        // JOptionPane.showMessageDialog(rootPane, "sort successfully");
        OptionCompartor choice = new OptionCompartor();
        choice.setLocationRelativeTo(null);
        choice.setVisible(true);
        choice.setStm(stm);
        choice.setRs(rs);
        choice.setjTable(jTable);
        choice.setTablemodel(tablemodel);

    }//GEN-LAST:event_jButton_sortActionPerformed
    public boolean CheckEmptyCodeSearch() {

        if (!jTextField_forsearch.getText().isEmpty()) {
            return false;
        }
        return true;
    }

    public int checkValidCodeSearch() {
        boolean valid_search = jTextField_forsearch.getText().trim().matches("[A-Z][0-9]{2}");
        if (!valid_search) {
            return 0;
        }

        return 1;
    }
    private void jButton_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchActionPerformed
        if (CheckEmptyCodeSearch()) {
            JOptionPane.showMessageDialog(rootPane, "TextField cant't be blank");
        } else {
            if (checkValidCodeSearch() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Code must contains 1 alphabet character and 2 number");
            } else {
                String code_search = jTextField_forsearch.getText().trim();
                if (checkDuplicate(code_search)) {
                    try {
                        String sql = "Select * from worker where code = '" + code_search + "'";
                        ArrayList<Employee> list = ListEmployee(sql);
                        String result = "";
                        for (int i = 0; i < list.size(); i++) {
                            Employee tempt = list.get(i);
                            result += tempt.toString() + "\n";
                        }
                        jTextArea_result.setEnabled(true);
                        jTextArea_result.setText(result);

                        JOptionPane.showMessageDialog(rootPane, "search successfully");
                    } catch (Exception e) {
                    }

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Cancel to search because code doesn't exist");
                }
            }
        }
    }//GEN-LAST:event_jButton_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Employee_Management em = new Employee_Management();
        em.setLocationRelativeTo(null);
        em.setVisible(true);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_add;
    private javax.swing.JButton jButton_search;
    private javax.swing.JButton jButton_sort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_bonus;
    private javax.swing.JLabel jLabel_code;
    private javax.swing.JLabel jLabel_name;
    private javax.swing.JLabel jLabel_salary;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextArea jTextArea_result;
    private javax.swing.JTextField jTextField_bonus;
    private javax.swing.JTextField jTextField_code;
    private javax.swing.JTextField jTextField_forsearch;
    private javax.swing.JTextField jTextField_name;
    private javax.swing.JTextField jTextField_salary;
    // End of variables declaration//GEN-END:variables
}
