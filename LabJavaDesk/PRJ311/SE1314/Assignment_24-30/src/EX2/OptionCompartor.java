/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EX2;

import DB_forEx2.DBContext;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell
 */
public class OptionCompartor extends javax.swing.JFrame {

    DBContext a = new DBContext();
    private Statement stm;// thực thi câu lệnh sql
    private ResultSet rs;//Lưu trữ và xử lý dữ liệu
    private DefaultTableModel tablemodel;
    private JTable jTable;

    public OptionCompartor() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton_code = new javax.swing.JButton();
        jButton_name = new javax.swing.JButton();
        jButton_salary = new javax.swing.JButton();
        jButton_bonus = new javax.swing.JButton();
        jCheckBox_asc = new javax.swing.JCheckBox();
        jCheckBox_desc = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 2, 18)); // NOI18N
        jLabel1.setText("Comparator");

        jButton_code.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_code.setText("Code");
        jButton_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_codeActionPerformed(evt);
            }
        });

        jButton_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_name.setText("Name");
        jButton_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_nameActionPerformed(evt);
            }
        });

        jButton_salary.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_salary.setText("Salary");
        jButton_salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salaryActionPerformed(evt);
            }
        });

        jButton_bonus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_bonus.setText("Bonus");
        jButton_bonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_bonusActionPerformed(evt);
            }
        });

        jCheckBox_asc.setText("ASC");
        jCheckBox_asc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox_ascMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCheckBox_ascMouseReleased(evt);
            }
        });

        jCheckBox_desc.setText("DESC");
        jCheckBox_desc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox_descMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCheckBox_descMouseReleased(evt);
            }
        });
        jCheckBox_desc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_descActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox_asc)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton_salary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_code, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_bonus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton_name)
                                    .addComponent(jCheckBox_desc))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_code)
                    .addComponent(jButton_name))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_salary)
                    .addComponent(jButton_bonus))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_asc)
                    .addComponent(jCheckBox_desc))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     public String getDirection() {

        String direction;
        if (jCheckBox_asc.isSelected()) {
            direction = "ASC";
        } else {
            direction = "DESC";
        }

        return direction;

    }

    public JTable getjTable() {
        return jTable;
    }

    public void setjTable(JTable jTable) {
        this.jTable = jTable;
    }

    public Statement getStm() {
        return stm;
    }

    public void setStm(Statement stm) {
        this.stm = stm;
    }

    public ResultSet getRs() {
        return rs;
    }

    public void setRs(ResultSet rs) {
        this.rs = rs;
    }

    public DefaultTableModel getTablemodel() {
        return tablemodel;
    }

    /**
     * @param args the command line arguments
     */
    public void setTablemodel(DefaultTableModel tablemodel) {
        this.tablemodel = tablemodel;
    }

    public boolean checkSelectedDirection() {

        if (!jCheckBox_asc.isSelected() && !jCheckBox_desc.isSelected()) {
            return false;
        }

        return true;

    }

    public void loadTableSorted(String comparator, String direction) {

        try {
            rs = stm.executeQuery("SELECT * FROM worker ORDER BY " + comparator + " " + direction);
            tablemodel.setRowCount(0);
            while (rs.next()) {
                String code = rs.getString("code");
                String name = rs.getString("name");
                double salary = Double.parseDouble(rs.getString("salary"));
                int bonus = Integer.parseInt(rs.getString("bonus"));
                tablemodel.insertRow(tablemodel.getRowCount(), new Object[]{code, name, salary, bonus});
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    private void jCheckBox_ascMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox_ascMouseClicked
        jCheckBox_desc.setSelected(false);
    }//GEN-LAST:event_jCheckBox_ascMouseClicked

    private void jCheckBox_descActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_descActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_descActionPerformed

    private void jCheckBox_descMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox_descMouseClicked
        jCheckBox_asc.setSelected(false);
    }//GEN-LAST:event_jCheckBox_descMouseClicked

    private void jCheckBox_ascMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox_ascMouseReleased

    }//GEN-LAST:event_jCheckBox_ascMouseReleased

    private void jCheckBox_descMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox_descMouseReleased

    }//GEN-LAST:event_jCheckBox_descMouseReleased

    private void jButton_codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_codeActionPerformed

        if (checkSelectedDirection()) {
            String direction = getDirection();
            String comparator = "code";
            loadTableSorted(comparator, direction);
            JOptionPane.showMessageDialog(rootPane, "sort successfully");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, "You must tick check box");
        }

    }//GEN-LAST:event_jButton_codeActionPerformed

    private void jButton_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_nameActionPerformed

        if (checkSelectedDirection()) {
            String direction = getDirection();
            String comparator = "name";
            loadTableSorted(comparator, direction);
            JOptionPane.showMessageDialog(rootPane, "sort successfully");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, "You must tick check box");
        }
    }//GEN-LAST:event_jButton_nameActionPerformed

    private void jButton_salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salaryActionPerformed
        if (checkSelectedDirection()) {
            String direction = getDirection();
            String comparator = "salary";
            loadTableSorted(comparator, direction);
            JOptionPane.showMessageDialog(rootPane, "sort successfully");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, "You must tick check box");
        }
    }//GEN-LAST:event_jButton_salaryActionPerformed

    private void jButton_bonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_bonusActionPerformed
        if (checkSelectedDirection()) {
            String direction = getDirection();
            String comparator = "bonus";
            loadTableSorted(comparator, direction);
            JOptionPane.showMessageDialog(rootPane, "sort successfully");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, "You must tick check box");
        }
    }//GEN-LAST:event_jButton_bonusActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OptionCompartor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OptionCompartor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OptionCompartor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OptionCompartor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OptionCompartor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_bonus;
    private javax.swing.JButton jButton_code;
    private javax.swing.JButton jButton_name;
    private javax.swing.JButton jButton_salary;
    private javax.swing.JCheckBox jCheckBox_asc;
    private javax.swing.JCheckBox jCheckBox_desc;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
