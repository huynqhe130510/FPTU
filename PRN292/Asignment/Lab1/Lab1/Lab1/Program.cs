using System;
using System.Collections.Generic;

namespace Lab1
{
    class Program
    {
        static void Main(string[] args)
        {
            List<Borrower> list = new List<Borrower>();

            string borrowNumber = "";
            string name = "";
            string sex = "";
            string address = "";
            string tel = "";
            string email = "";
            string count;
            int c = 0;

            string bookNumber = "";
            string title = "";
            string author = "";
            string publisher = "";
            string copyNumber = "";
            string sequenceNumber = "";
            string type = "";
            float price = 0;
            string yn = "";
            string p = price.ToString();
            List<Book> listBook = new List<Book>();
            List<BookCopies> listBookCopies = new List<BookCopies>();

            while (c < 4)
            {
                Console.WriteLine("MENU");
                Console.WriteLine("1.	Add a new borrower");
                Console.WriteLine("2.	Add a new book and its copies");
                Console.WriteLine("3.	Exit");

                count = Console.ReadLine();
                Int32.TryParse(count, out c);

                switch (c)
                {
                    case 1:
                        Console.Write("Borrower number (generated by the system): ");
                        borrowNumber
                            = Console.ReadLine();
                        Console.Write("Enter Name: ");
                        name = Console.ReadLine();
                        while (name.Equals(""))
                        {
                            Console.WriteLine("Must not be empty. Try again!");
                            Console.Write("Enter Name: ");
                            name = Console.ReadLine();
                        }
                        Console.Write("Enter Sex (M/F): ");
                        sex = Console.ReadLine();
                        while (!sex.Equals("M") || !sex.Equals("F"))
                        {
                            if (sex.Equals("M") || sex.Equals("F"))
                                break;
                            Console.WriteLine("Must be M or F. Try again!");
                            Console.Write("Enter Sex (M/F): ");
                            sex = Console.ReadLine();
                        }
                        Console.Write("Enter Address (optional): ");
                        address = Console.ReadLine();
                        Console.Write("Enter Telephone: ");
                        tel = Console.ReadLine();
                        Console.Write("Enter Email: ");
                        email = Console.ReadLine();

                        Borrower.addBorrower(list, borrowNumber, name, sex, address, tel, email);

                        Console.WriteLine("List of borrowers:");
                        Console.WriteLine("Number   Name     Sex   Email");
                        foreach (Borrower b in list)
                        {
                            Console.WriteLine("  {0}      {1}      {2}     {3}", b.BorrowNumber, b.Name, b.Sex, b.Email);
                        }
                        break;
                    case 2:
                        Console.Write("Enter book number: ");
                        bookNumber = Console.ReadLine();
                        Console.Write("Enter Title: ");
                        title = Console.ReadLine();
                        while (title.Equals(""))
                        {
                            Console.WriteLine("Must not be empty. Try again!");
                            Console.Write("Enter Title: ");
                            title = Console.ReadLine();
                        }
                        Console.Write("Enter author: ");
                        author = Console.ReadLine();
                        Console.Write("Enter publisher: ");
                        publisher = Console.ReadLine();
                        Book.addBook(listBook, bookNumber, title, author, publisher);
                        Console.Write("Enter copyNumber: ");
                        copyNumber = Console.ReadLine();
                        Console.Write("Enter sequenceNumber: ");
                        sequenceNumber = Console.ReadLine();
                        Console.Write("Enter Type (A/R): ");
                        type = Console.ReadLine();
                        while (!type.Equals("A") || !type.Equals("R"))
                        {
                            if (type.Equals("A") || type.Equals("R"))
                                break;
                            Console.WriteLine("Must be A or R. Try again!");
                            Console.Write("Enter Type (A/R): ");
                            type = Console.ReadLine();
                        }
                        Console.Write("Enter price: ");
                        p = Console.ReadLine();
                        price = float.Parse(p);
                        while (price < 0)
                        {
                            Console.WriteLine("Must not be less than 0. Enter again!");
                            p = Console.ReadLine();
                        }
                        BookCopies.addCopy(listBookCopies, copyNumber, sequenceNumber, type, price, bookNumber);
                        Console.Write("Add another copy (y/n)?: ");
                        yn = Console.ReadLine();
                        while (!yn.Equals("y") || !yn.Equals("n"))
                        {
                            if (yn.Equals("n"))
                            {
                                break;
                            }
                            else if (yn.Equals("y"))
                            {
                                Console.Write("Enter copyNumber: ");
                                copyNumber = Console.ReadLine();
                                Console.Write("Enter sequenceNumber: ");
                                sequenceNumber = Console.ReadLine();
                                Console.Write("Enter Type (A/R): ");
                                type = Console.ReadLine();
                                while (!type.Equals("A") || !type.Equals("R"))
                                {
                                    if (type.Equals("A") || type.Equals("R"))
                                        break;
                                    Console.WriteLine("Must be A or R. Try again!");
                                    Console.Write("Enter Type (A/R): ");
                                    type = Console.ReadLine();
                                }
                                Console.Write("Enter price: ");
                                p = Console.ReadLine();
                                price = float.Parse(p);
                                while (price < 0)
                                {
                                    Console.WriteLine("Must not be less than 0. Enter again!");
                                    p = Console.ReadLine();
                                }
                                listBookCopies = BookCopies.addCopy(listBookCopies, copyNumber, sequenceNumber, type, price, bookNumber);

                                Console.Write("Add another copy (y/n)?: ");
                                yn = Console.ReadLine();
                            }

                        }
                        Console.WriteLine("List of books and its copies");

                        foreach (Book b in listBook)
                        {
                            Console.WriteLine("Book#   Title     Author   Publisher");
                            Console.WriteLine("{0}        {1}       {2}     {3}", b.BookNumber, b.Title, b.Author, b.Publisher);

                            Console.WriteLine("     Copy#   Sequence#     Type   Price");
                            foreach (BookCopies bc in listBookCopies)
                            {
                                if (b.BookNumber.Equals(bc.BookNumber))
                                {
                                    Console.WriteLine("     {0}          {1}          {2}      {3}", bc.CopieNumber, bc.SequenceNumber, bc.Type, bc.Price);
                                }
                            }
                        }
                        break;
                    case 3:
                        System.Environment.Exit(0);
                        break;
                }
            }
            Console.ReadKey();
        }
    }
}
